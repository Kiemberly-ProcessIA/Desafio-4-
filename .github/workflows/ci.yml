name: CI - Sistema VR

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  PYTHON_VERSION: '3.11'

jobs:
  ci-sistema-vr:
    name: Testes e Validações
    runs-on: ubuntu-latest
    env:
      GOOGLE_API_KEY: ${{ secrets.GOOGLE_API_KEY }}
    steps:
    - name: Gerar config.py com a chave do secret
      run: |
        echo "# config.py gerado automaticamente pelo GitHub Actions" > config.py
        echo "GOOGLE_API_KEY = \"$GOOGLE_API_KEY\"" >> config.py
        echo "NOME_MODELO_LLM = \"gemini-2.0-flash-001\"" >> config.py
      shell: bash
    - name: Checkout código
      uses: actions/checkout@v4
      
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}
        
    - name: Cache uv
      uses: actions/cache@v3
      with:
        path: ~/.cache/uv
        key: ${{ runner.os }}-uv-${{ hashFiles('requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-uv-
          
    - name: Instalar uv
      run: |
        curl -LsSf https://astral.sh/uv/install.sh | sh
        echo "$HOME/.cargo/bin" >> $GITHUB_PATH
        
    - name: Setup ambiente
      run: make install
        
    - name: Criar configuração de teste
      run: |
        cp config.py.example config.py
        sed -i 's/SUA_CHAVE_AQUI/FAKE_API_KEY_FOR_TESTING/' config.py
        
    - name: Verificar status
      run: make status
      
    - name: Testar API do Google Gemini
      run: make test-api
      env:
        GOOGLE_API_KEY: ${{ secrets.GOOGLE_API_KEY }}
      continue-on-error: true
        
    - name: Verificar formatação
      run: make format-check
        
    - name: Análise de código
      run: make lint
        
    - name: Verificar configuração
      run: make config
      
    - name: Executar testes do sistema
      run: make test-ci
        
    - name: Executar sistema VR
      run: make run
      env:
        GOOGLE_API_KEY: ${{ secrets.GOOGLE_API_KEY }}
      continue-on-error: true
        
    - name: Upload dos Outputs
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: sistema-vr-outputs-${{ github.run_number }}
        path: |
          output/
          !output/logs/*.log
        retention-days: 30
        
    - name: Upload dos Logs
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: sistema-vr-logs-${{ github.run_number }}
        path: output/logs/
        retention-days: 7
      
    - name: Limpeza final
      if: always()
      run: make clean
