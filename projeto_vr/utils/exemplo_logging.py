#!/usr/bin/env python3
"""
Exemplo de uso do sistema de logging padronizado.
Este arquivo demonstra as principais funcionalidades do logging profissional.
"""

import sys
from pathlib import Path

# Adicionar o diret√≥rio do projeto ao path
project_root = Path(__file__).parent.parent
sys.path.append(str(project_root))

from utils.logging_config import (
    get_logger, 
    log_inicio_passo, 
    log_fim_passo, 
    log_erro_critico,
    log_processamento,
    log_resultado_validacao,
    LoggerContextManager,
    log_step
)

# Obter logger para este m√≥dulo
logger = get_logger(__name__)

@log_step("EXEMPLO", "Processamento de dados demonstrativo")
def exemplo_funcao_com_decorator():
    """Exemplo de fun√ß√£o usando decorator para logging autom√°tico."""
    logger.info("üîÑ Processando dados...")
    
    # Simular processamento
    import time
    time.sleep(1)
    
    logger.info("‚úÖ Dados processados com sucesso!")
    return {"status": "ok", "registros": 100}

def exemplo_uso_basico():
    """Demonstra uso b√°sico do logging."""
    logger.info("üìã Exemplo de logging b√°sico")
    logger.debug("üîç Informa√ß√£o de debug")
    logger.warning("‚ö†Ô∏è  Aviso importante")
    logger.error("‚ùå Erro simulado")
    
def exemplo_logs_padronizados():
    """Demonstra logs padronizados para passos do sistema."""
    
    # In√≠cio de passo
    log_inicio_passo("PASSO EXEMPLO", "Demonstra√ß√£o do Sistema de Logging", logger)
    
    # Processamento com logs de progresso
    total_items = 50
    for i in range(1, total_items + 1):
        if i % 10 == 0:  # Log a cada 10 itens
            log_processamento("registros", i, total_items, f"(batch {i//10})", logger)
    
    # Resultado de valida√ß√£o
    log_resultado_validacao("DADOS", validos=45, invalidos=5, warnings=2, logger=logger)
    
    # Fim de passo com estat√≠sticas
    estatisticas = {
        "registros_processados": total_items,
        "v√°lidos": 45,
        "inv√°lidos": 5,
        "tempo_processamento": "2.3s"
    }
    log_fim_passo("PASSO EXEMPLO", "Demonstra√ß√£o do Sistema de Logging", estatisticas, logger)

def exemplo_context_manager():
    """Demonstra uso do context manager para logging."""
    
    with LoggerContextManager(logger, "OPERA√á√ÉO", "Carregamento de arquivo"):
        logger.info("üìÅ Carregando arquivo exemplo.xlsx...")
        
        # Simular trabalho
        import time
        time.sleep(0.5)
        
        logger.info("‚úÖ Arquivo carregado com sucesso!")

def exemplo_tratamento_erro():
    """Demonstra logging de erros cr√≠ticos."""
    
    try:
        # Simular erro
        resultado = 10 / 0
    except ZeroDivisionError as e:
        log_erro_critico("Divis√£o por zero detectada!", e, logger)
        
def main():
    """Fun√ß√£o principal com exemplos de uso."""
    logger.info("üöÄ INICIANDO DEMONSTRA√á√ÉO DO SISTEMA DE LOGGING")
    logger.info("="*60)
    
    # Exemplo 1: Uso b√°sico
    logger.info("üìù Exemplo 1: Logging b√°sico")
    exemplo_uso_basico()
    
    logger.info("\n" + "="*40)
    
    # Exemplo 2: Logs padronizados  
    logger.info("üìä Exemplo 2: Logs padronizados para passos")
    exemplo_logs_padronizados()
    
    logger.info("\n" + "="*40)
    
    # Exemplo 3: Context manager
    logger.info("üéØ Exemplo 3: Context manager")
    exemplo_context_manager()
    
    logger.info("\n" + "="*40)
    
    # Exemplo 4: Fun√ß√£o com decorator
    logger.info("üîß Exemplo 4: Decorator de logging")
    resultado = exemplo_funcao_com_decorator()
    logger.info(f"Resultado: {resultado}")
    
    logger.info("\n" + "="*40)
    
    # Exemplo 5: Tratamento de erro
    logger.info("üí• Exemplo 5: Tratamento de erro")
    exemplo_tratamento_erro()
    
    logger.info("="*60)
    logger.info("‚úÖ DEMONSTRA√á√ÉO CONCLU√çDA")

if __name__ == "__main__":
    main()
